# Simple template for custom secret detector
id: @myorg:unique-id
# Is the detector enabled? If no, the detector will not be loaded (default is enabled: yes)
enabled: yes
# One standard secret type: artifactory_apikey .. pypirc
# May use generic ones like: apikey, basic_auth_url, high_entropy, password, regex
# or the fallback: other
type: other
# If not given, the default, configurable GenericSecretDetector will be used
#classname: pkg.to.MySecretDetector
description: What the detector looks for
# The severity or importance of the secrets detected here
# One of critical, high, low, info
severity: high
# Default likelihood given to each secret finding by this detector
# One of highest, high, medium, low
confidence: medium
# if generic: yes, secrets found will be tagged as generic.
# Generic secrets are discarded when another non-generic ('specific') detector finds the same secret.
generic: no

# quickFilters are strings that will be checked in the input, to quickly filter the secret before it is processed by patterns.
# Useful if the pattern is complex, to improve detection time.
quickFilters:
  - string1
  - string2

# Each condition block may specify:
#   regex (pattern, ignorecase, exact, keyGroup and secretGroup)
#   minlen (minimum number of characters)
#   minEntropy (minimum Shannon Entropy, in bits per byte). Between 0 and 8.
#   base64 (if true, the item should be base-64 encoded. If true, the value is decoded for other checks)
#   uri (if true, match only URL)
#   uuid4 (if true, match UUID 4)
#   ascii (if true, match only printable ASCII)
#   keyGroup, secretGroup: The pattern group to assign to the key or value of the secret.
#     This is useful for use a pattern to extract the group that really conveys the item.

# Conditions on the key part of the entry.
# Typically, the key is the variable or property the secret is assigned to.
key:
  regex:
    pattern: '\b_?(secret|credential|auth)_?\b'
    ignorecase: no
    exact: no # default. Set to yes for full match
    keyGroup: 0 # no specific regex group

# Conditions on the value (potential secret holder) part of the entry.
#
value:
  # Pattern
  regex:
    pattern: '[a-zA-Z0-9_.+/~$-]{14,1022}'
    ignorecase: no # default
    exact: no # default. Set to yes for full match
    secretGroup: 0 # no specific regex group
  # Alternative or additional conditions
  ascii: no
  uri: no
  base64: no
  uuid4: no
  minlen: 16 #
  minEntropy: 3
  # (optional) Patterns to discard. Useful for removing false positives.
  ignore:
    - '\$\{[a-zA-Z0-9_\-]+}'

# (Optional) check for key identifier
# Credentials often go in pairs.
# The secret part of the credential often needs an ID (account name, key ID, username...) for remediation
secretId:
  regex:
    pattern: '\b_?(secret|credential|auth)_?\b'
    ignorecase: no
    exact: no # default. Set to yes for full match
  # Alternative or additional conditions
  ascii: no
  uri: no
  base64: no
  uuid4: no
  minlen: 16 #
  minEntropy: 3

# If the key and value hove greater similarity than this, the entry ignored.
# Useful to avoid false positives like MY_TOKEN = ${MY_TOKEN}
similarity: 0.35

properties:
  configProp: 'some'
  configProp2: ['pat1', 'pat2']
  configProp3: true
  configProp4: 32

# Further detectors may be written in the same file, separated by ---.
# ----
# id: ...
# ...
