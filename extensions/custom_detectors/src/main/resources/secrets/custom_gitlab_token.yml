# Example of custom detector configuration for GitLab Personal Access Token
# This checks for a GitLab Personal Access Token, which has a 'glpat-' prefix.
# The verifier uses the 'gitlab.com/api/v4/user' endpoint with the token to verify as the bearer token.

id: custom_gitlab_token
enabled: yes
type: gitlab_token

description: GitLab Personal Token

severity: critical
confidence: highest

value:
  regex:
    # Example: glpat-0123456789aBcDeFgG-hIJ
    pattern: '\bglpat-[0-9a-zA-Z\-=_]{20,22}\b'
    ignorecase: no

# Verifier invokes /api/v4/user with the token,
# and checks for 200 or 403 HTTP codes
verifier:
  className: com.depsdoctor.secrets.scanner.detector.verifier.ApiVerifier
  # If the token is invalid, sets severity=info (no risk now)
  # but it is reported so the user may investigate past accesses with the token
  action: set_info_when_not_verified
  properties:
    host: gitlab.com/api/v4/user
    tokenPrefix: Bearer
    # 200: Token is valid; 403: token is valid but scope not enough for /user endpoint
    httpCodes: [200, 403]
